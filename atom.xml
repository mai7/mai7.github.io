<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  
  <link href="https://q0519.gitee.io/blog/atom.xml" rel="self"/>
  
  <link href="https://q0519.gitee.io/blog/"/>
  <updated>2020-11-29T17:02:51.097Z</updated>
  <id>https://q0519.gitee.io/blog/</id>
  
  <author>
    <name>Vincent Q</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter 介绍</title>
    <link href="https://q0519.gitee.io/blog/2020/11/29/Flutter/flutter-intro/"/>
    <id>https://q0519.gitee.io/blog/2020/11/29/Flutter/flutter-intro/</id>
    <published>2020-11-29T14:54:02.636Z</published>
    <updated>2020-11-29T17:02:51.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flutter-配置"><a href="#Flutter-配置" class="headerlink" title="Flutter 配置"></a>Flutter 配置</h2><p>最近尝试进行移动端开发，了解了Flutter框架以及Dart语言，希望能够对其进行深入的探索。</p><?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="376px" preserveAspectRatio="none" style="width:596px;height:376px;" version="1.1" viewBox="0 0 596 376" width="596px" zoomAndPan="magnify"><defs><filter height="300%" id="f1c55hzhb0xqed" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="4.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="8.0" dy="8.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#ADD8E6" filter="url(#f1c55hzhb0xqed)" height="78.2402" rx="25" ry="25" style="stroke: #A80036; stroke-width: 3.0;" width="122" x="214" y="158.2402"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacingAndGlyphs" textLength="82" x="234" y="210.3281">Flutter</text><rect fill="#FFA500" filter="url(#f1c55hzhb0xqed)" height="78.2402" rx="25" ry="25" style="stroke: #A80036; stroke-width: 3.0;" width="138" x="436" y="40"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacingAndGlyphs" textLength="98" x="456" y="92.0879">Android</text><path d="M336,197.3604 L356,197.3604 C386,197.3604 386,79.1201 416,79.1201 L436,79.1201 " fill="none" style="stroke: #A80036; stroke-width: 2.0;"/><rect fill="#FFFFFF" filter="url(#f1c55hzhb0xqed)" height="78.2402" rx="25" ry="25" style="stroke: #A80036; stroke-width: 3.0;" width="86" x="436" y="158.2402"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacingAndGlyphs" textLength="46" x="456" y="210.3281">IOS</text><path d="M336,197.3604 L356,197.3604 C386,197.3604 386,197.3604 416,197.3604 L436,197.3604 " fill="none" style="stroke: #A80036; stroke-width: 2.0;"/><rect fill="#FEFECE" filter="url(#f1c55hzhb0xqed)" height="78.2402" rx="25" ry="25" style="stroke: #A80036; stroke-width: 3.0;" width="98" x="436" y="276.4805"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacingAndGlyphs" textLength="58" x="456" y="328.5684">Web</text><path d="M336,197.3604 L356,197.3604 C386,197.3604 386,315.6006 416,315.6006 L436,315.6006 " fill="none" style="stroke: #A80036; stroke-width: 2.0;"/><rect fill="#FEFECE" filter="url(#f1c55hzhb0xqed)" height="78.2402" rx="25" ry="25" style="stroke: #A80036; stroke-width: 3.0;" width="94" x="20" y="158.2402"/><text fill="#000000" font-family="sans-serif" font-size="28" lengthAdjust="spacingAndGlyphs" textLength="54" x="40" y="210.3281">Dart</text><path d="M214,197.3604 L194,197.3604 C164,197.3604 164,197.3604 134,197.3604 L114,197.3604 " fill="none" style="stroke: #A80036; stroke-width: 2.0;"/><!--MD5=[b53ac712955b7497f20f840eed9f2fb4]@startmindmapscale 2*[#lightblue] Flutter**[#orange] Android**[#white] IOS** Web- - Dart@endmindmapPlantUML version 1.2020.10(Sun May 17 17:35:57 CST 2020)(GPL source distribution)Java Runtime: Java(TM) SE Runtime EnvironmentJVM: Java HotSpot(TM) Client VMJava Version: 1.8.0_271-b09Operating System: Windows 10Default Encoding: GBKLanguage: zhCountry: CN--></g></svg>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Flutter-配置&quot;&gt;&lt;a href=&quot;#Flutter-配置&quot; class=&quot;headerlink&quot; title=&quot;Flutter 配置&quot;&gt;&lt;/a&gt;Flutter 配置&lt;/h2&gt;&lt;p&gt;最近尝试进行移动端开发，了解了Flutter框架以及Dart语言，希望能够对</summary>
      
    
    
    
    <category term="Flutter" scheme="https://q0519.gitee.io/blog/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://q0519.gitee.io/blog/2020/11/29/Others/hello-world/"/>
    <id>https://q0519.gitee.io/blog/2020/11/29/Others/hello-world/</id>
    <published>2020-11-29T12:24:20.195Z</published>
    <updated>2020-11-29T16:54:09.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用码云开始搭建一个博客"><a href="#使用码云开始搭建一个博客" class="headerlink" title="使用码云开始搭建一个博客"></a>使用码云开始搭建一个博客</h2><h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 安装hexo，需要配置nodejs环境</span></span></span><br><span class="line">npm install hexo -g</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 创建博客，目录名任意，此处为blog</span></span></span><br><span class="line">hexo create blog</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 进入blog</span></span></span><br><span class="line">cd blog</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><h4 id="配置文件-config-yml"><a href="#配置文件-config-yml" class="headerlink" title="配置文件 _config.yml"></a>配置文件 _config.yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL节调整如下</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://example.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://q0519.gitee.io/blog</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span></span><br></pre></td></tr></table></figure><h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><p>使用如下命令创建一个新的markdown文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;Hello World！&quot;</span><br></pre></td></tr></table></figure><p>之后可以在 _source 文件夹中找到相应的文件。如果使用自动建立Category插件，可能需要手工设置folder及建立文件。</p><p>常用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清理发布文件及缓存</span><br><span class="line">hexo g   #生成发布文件</span><br><span class="line">hexo d   #发布到远程（依赖自动发布插件）</span><br></pre></td></tr></table></figure><h2 id="一些有用的插件"><a href="#一些有用的插件" class="headerlink" title="一些有用的插件"></a>一些有用的插件</h2><p>目前我使用了如下一些插件</p><h3 id="自动发布Blog插件"><a href="#自动发布Blog插件" class="headerlink" title="自动发布Blog插件"></a>自动发布Blog插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 安装hexo 部署插件</span></span></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># deploy节调整如下</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@gitee.com:q0519/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>如果需要将工程源码也保存在gitee/github上面，可以单独对整个项目建立git远端存储，和deploy设置不同的Repository，以满足在任意环境都可以通过同步源码独立维护发布blog的需求。</p><h3 id="自动建立Category的插件"><a href="#自动建立Category的插件" class="headerlink" title="自动建立Category的插件"></a>自动建立Category的插件</h3><p>可以根据Folder分配情况自动建立Category。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-auto-category --save</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_category:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">depth:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/xu-song/hexo-auto-category">源码地址</a></p><h3 id="建立RSS订阅的插件"><a href="#建立RSS订阅的插件" class="headerlink" title="建立RSS订阅的插件"></a>建立RSS订阅的插件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">#RSS订阅</span></span><br><span class="line"><span class="attr">plugin:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p><a href="https://github.com/hexojs/hexo-generator-feed">源码地址</a></p><h3 id="渲染Plantuml"><a href="#渲染Plantuml" class="headerlink" title="渲染Plantuml"></a>渲染Plantuml</h3><p>总共实验了两款plantuml插件，hexo-tag-plantuml以及hexo-filter-plantuml，我最后选择的是后者，理由如下：</p><ol><li>tag插件需要访问plantuml网站进行图形渲染，filter则可以配置为访问本地plantuml.jar，并且可以输出svg及base64图片到网页中，相对比较安全方便。</li><li>filter对注释形式的uml tag支持比较好，可以兼容vscode + markdown + plantuml插件，整体体验较好。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-plantuml --save</span><br></pre></td></tr></table></figure><p>配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo-filter-plantuml</span></span><br><span class="line"><span class="attr">plantuml:</span></span><br><span class="line">  <span class="comment">#  Local or PlantUMLServer.</span></span><br><span class="line">  <span class="attr">render:</span> <span class="string">&quot;Local&quot;</span></span><br><span class="line">  <span class="comment"># &quot;inline&quot;: &lt;svg&gt;xxx&lt;svg/&gt;</span></span><br><span class="line">  <span class="comment"># &quot;inlineUrlEncode&quot;: &lt;img src=&#x27;data:image/svg+xml;&gt; </span></span><br><span class="line">  <span class="comment"># &quot;inlineBase64&quot;: &lt;img src=&#x27;data:image/svg+xml;base64&gt; </span></span><br><span class="line">  <span class="comment"># &quot;localLink&quot;: &lt;img src=&quot;/assert/puml/xxxx.svg&quot;&gt;</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">&quot;inline&quot;</span></span><br><span class="line">  <span class="comment"># where your dot binary</span></span><br><span class="line">  <span class="attr">GraphvizDotFile:</span> <span class="string">&quot;C:\\Program Files (x86)\\Graphviz2.38\\bin\\dot&quot;</span></span><br><span class="line">  <span class="comment"># where your jar</span></span><br><span class="line">  <span class="attr">PlantJar:</span> <span class="string">&quot;C:\\Dev\\plantUml\\plantuml.jar&quot;</span></span><br><span class="line">  <span class="attr">asset_path:</span> <span class="string">&quot;asset&quot;</span> <span class="comment">#这个路径不是必须的，只是纠正一个拼写错误</span></span><br><span class="line">  <span class="comment"># common options: svg/png</span></span><br><span class="line">  <span class="attr">outputFormat:</span> <span class="string">&quot;svg&quot;</span></span><br></pre></td></tr></table></figure><p>注意，如果使用hexo clean清理public目录，需要在之后创建public目录。由于filter-plantuml插件对于文件夹有硬性要求，需要在生成阶段保证public目录存在，才能进行后续路径创建。相信这个bug会在之后的发布修正。</p><p>另外，如上两个插件不可以在项目中并存。如果都安装了，可以通过如下命令卸载其中之一。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall ???</span><br></pre></td></tr></table></figure><p><a href="https://github.com/miao1007/hexo-filter-plantuml">源码地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用码云开始搭建一个博客&quot;&gt;&lt;a href=&quot;#使用码云开始搭建一个博客&quot; class=&quot;headerlink&quot; title=&quot;使用码云开始搭建一个博客&quot;&gt;&lt;/a&gt;使用码云开始搭建一个博客&lt;/h2&gt;&lt;h3 id=&quot;基本步骤&quot;&gt;&lt;a href=&quot;#基本步骤&quot; cla</summary>
      
    
    
    
    <category term="Others" scheme="https://q0519.gitee.io/blog/categories/Others/"/>
    
    
  </entry>
  
</feed>
